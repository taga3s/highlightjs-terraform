// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`highlight bundle > highlights terraform (base-input) 1`] = `
"<span class="hljs-comment"># Terraform (hcl)</span>
<span class="hljs-keyword">
variable</span> <span class="hljs-string">&quot;string&quot;</span> {
  default = <span class="hljs-string">&quot;string_test&quot;</span> <span class="hljs-comment"># test inline comment</span>
}
<span class="hljs-keyword">
resource</span> <span class="hljs-string">&quot;azurerm_subnet&quot;</span> <span class="hljs-string">&quot;sn1&quot;</span> {
  count                = <span class="hljs-number">1</span>
  number               = <span class="hljs-number">2.3</span>
  boolean              = <span class="hljs-literal">true</span>
  type                 = <span class="hljs-string">&quot;<span class="hljs-subst">\${var.string}</span>&quot;</span>
  name                 = <span class="hljs-string">&quot;<span class="hljs-subst">\${var.prefix}</span>-sn&quot;</span>
  resource_group_name  = <span class="hljs-string">&quot;<span class="hljs-subst">\${azurerm_resource_group.rg1.name}</span>&quot;</span>
  virtual_network      = <span class="hljs-string">&quot;<span class="hljs-subst">\${<span class="hljs-meta">cidrsubnet(<span class="hljs-string">&quot;test&quot;</span>,<span class="hljs-number">3</span>,<span class="hljs-meta">test()</span>)</span>}</span>&quot;</span>
  address_prefix       = <span class="hljs-string">&quot;<span class="hljs-subst">\${<span class="hljs-meta">cidrsubnet(<span class="hljs-string">&quot;<span class="hljs-subst">\${var.vnets[<span class="hljs-string">&quot;<span class="hljs-subst">\${var.location}</span>&quot;</span>,<span class="hljs-string">&quot;test1&quot;</span>]}</span>&quot;</span>,<span class="hljs-string">&quot;<span class="hljs-subst">\${var.network_size}</span>&quot;</span>,<span class="hljs-number">3</span>,<span class="hljs-string">&quot;test&quot;</span>)</span>}</span>&quot;</span>

  tags = <span class="hljs-string">&quot;<span class="hljs-subst">\${<span class="hljs-meta">merge(local.tags, <span class="hljs-meta">map(<span class="hljs-string">&quot;update&quot;</span>,<span class="hljs-string">&quot;<span class="hljs-subst">\${<span class="hljs-meta">timestamp()</span>}</span>&quot;</span>)</span>)</span>}</span>&quot;</span>
}
<span class="hljs-keyword">
output</span> <span class="hljs-string">&quot;public_ip_address&quot;</span> {
  value = [<span class="hljs-string">&quot;<span class="hljs-subst">\${azurerm_public_ip.pip1.*.ip_address}</span>&quot;</span>]
}
<span class="hljs-keyword">

terraform</span> {
<span class="hljs-keyword">  backend</span> <span class="hljs-string">&quot;azure&quot;</span> {
    storage_account_name = <span class="hljs-string">&quot;azure&quot;</span>
  }
}
"
`;

exports[`highlight bundle > highlights terraform (base2-input) 1`] = `
"<span class="hljs-keyword">terraform</span> {
<span class="hljs-keyword">  required_providers</span> {
    aws = {
      source = <span class="hljs-string">&quot;hashicorp/aws&quot;</span>
    }
  }
}
<span class="hljs-keyword">
provider</span> <span class="hljs-string">&quot;aws&quot;</span> {
  alias   = <span class="hljs-string">&quot;user&quot;</span>
  region  = var.region
  profile = var.profile
}
<span class="hljs-keyword">resource</span> <span class="hljs-string">&quot;aws_s3_bucket&quot;</span> <span class="hljs-string">&quot;example&quot;</span> {
  provider      = aws.user
  bucket        = var.bucket_name
  acl           = var.acl_value
  force_destroy = <span class="hljs-string">&quot;false&quot;</span>
}
<span class="hljs-keyword">
resource</span> <span class="hljs-string">&quot;aws_s3_bucket_object&quot;</span> <span class="hljs-string">&quot;object2&quot;</span> {
  for_each = <span class="hljs-meta">fileset(<span class="hljs-string">&quot;myfiles/&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>)</span>
  bucket   = aws_s3_bucket.example.bucket
  key      = <span class="hljs-string">&quot;new_objects&quot;</span>
  source   = <span class="hljs-string">&quot;myfiles/<span class="hljs-subst">\${each.value}</span>&quot;</span>
  etag     = <span class="hljs-meta">filemd5(<span class="hljs-string">&quot;myfiles/<span class="hljs-subst">\${each.value}</span>&quot;</span>)</span>
}
"
`;

exports[`highlight bundle > highlights terraform (base3-input) 1`] = `
"<span class="hljs-keyword">locals</span> {
    subnet_map_list = [
        { <span class="hljs-string">&quot;name&quot;</span> = <span class="hljs-string">&quot;sample-subnet1&quot;</span>, <span class="hljs-string">&quot;cidr&quot;</span> = <span class="hljs-string">&quot;10.0.101.0/24&quot;</span>, <span class="hljs-string">&quot;az_name&quot;</span> = <span class="hljs-string">&quot;ap-northeast-1a&quot;</span> },
        { <span class="hljs-string">&quot;name&quot;</span> = <span class="hljs-string">&quot;sample-subnet2&quot;</span>, <span class="hljs-string">&quot;cidr&quot;</span> = <span class="hljs-string">&quot;10.0.102.0/24&quot;</span>, <span class="hljs-string">&quot;az_name&quot;</span> = <span class="hljs-string">&quot;ap-northeast-1c&quot;</span> },
        { <span class="hljs-string">&quot;name&quot;</span> = <span class="hljs-string">&quot;sample-subnet3&quot;</span>, <span class="hljs-string">&quot;cidr&quot;</span> = <span class="hljs-string">&quot;10.0.103.0/24&quot;</span>, <span class="hljs-string">&quot;az_name&quot;</span> = <span class="hljs-string">&quot;ap-northeast-1c&quot;</span> },
    ]
}
<span class="hljs-keyword">
resource</span> <span class="hljs-string">&quot;aws_subnet&quot;</span> <span class="hljs-string">&quot;subnet&quot;</span> {
    for_each = { for subnet in local.subnet_map_list : subnet.name =&gt; subnet }

    vpc_id = aws_vpc.vpc.id
    cidr_block = each.value.cidr
    availability_zone = each.value.az_name
    tags = {
        Name = each.key
    }
}
"
`;
